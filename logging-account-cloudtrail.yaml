AWSTemplateFormatVersion: '2010-09-09'
Description: Configures cross account CloudTrail. Creates a bucket and policy for CloudTrail to receive logs from the logs account and from other accounts. Also creates a KMS key for the logs and its policy, which allows other accounts to use it.

Parameters:
  CloudTrailBucketName:
    Description: 'The S3 bucket that will be storing CloudTrail logs from this account and from others.'
    Type: String
    Default: "organization-cloudtrail-logs"
  EncryptLogs:
    Description: Indicates whether the logs stored in the S3 bucket should be encrypted or not.
    Type: String
    Default: "true"
    AllowedValues: 
      - "true"
      - "false"
  KMSKeyName:
    Description: 'Alias given to the KMS key used to encrypt CloudTrail Logs (ignored if Encrypt Logs is set to false)'
    Type: String
    Default: "cloudtrail-key"
  
  ConfigureLocalCloudTrail:
    Description: Enable CloudTrail in this (local) account
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
  CloudTrailLogName:
    Description: 'Name given to the CloudTrail logs configuration'
    Type: String
    Default: "organization-cloudtrail"
  MultiRegion:
    Description: Indicates whether the CloudTrail trail is created in the region in which you create the stack (false) or in all regions (true).
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
  IncludeGlobalEvents:
    Description: Indicates whether the trail is publishing events from global services, such as IAM, to the log files.
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
  EnableLogFileValidation:
    Description: Indicates whether CloudTrail validates the integrity of log files.
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
  ReadWriteType:
    Description: Specifies whether to log read-only events, write-only events, or all events.
    Type: String
    Default: All
    AllowedValues:
      - ReadOnly
      - WriteOnly
      - All
  AWSAccount1:
    Description: '(Optional) AWS Account Number to allow CloudTrail to deliver logs from this account.'
    Type: String
    Default: "111111111111"
    AllowedPattern: (^[0-9]{12}$)|(^$)
  AWSAccount2:
    Description: '(Optional) AWS Account Number to allow CloudTrail to deliver logs from this account.'
    Type: String
    Default: "222222222222"
    AllowedPattern: (^[0-9]{12}$)|(^$)
  AWSAccount3:
    Description: '(Optional) AWS Account Number to allow CloudTrail to deliver logs from this account.'
    Type: String
    Default: ""
    AllowedPattern: (^[0-9]{12}$)|(^$)
  AWSAccount4:
    Description: '(Optional) AWS Account Number to allow CloudTrail to deliver logs from this account.'
    Type: String
    Default: ""
    AllowedPattern: (^[0-9]{12}$)|(^$)
  AWSAccount5:
    Description: '(Optional) AWS Account Number to allow CloudTrail to deliver logs from this account.'
    Type: String
    Default: ""
    AllowedPattern: (^[0-9]{12}$)|(^$)
  AWSAccount6:
    Description: '(Optional) AWS Account Number to allow CloudTrail to deliver logs from this account.'
    Type: String
    Default: ""
    AllowedPattern: (^[0-9]{12}$)|(^$)
  AWSAccount7:
    Description: '(Optional) AWS Account Number to allow CloudTrail to deliver logs from this account.'
    Type: String
    Default: ""
    AllowedPattern: (^[0-9]{12}$)|(^$)
  AWSAccount8:
    Description: '(Optional) AWS Account Number to allow CloudTrail to deliver logs from this account.'
    Type: String
    Default: ""
    AllowedPattern: (^[0-9]{12}$)|(^$)
  AWSAccount9:
    Description: '(Optional) AWS Account Number to allow CloudTrail to deliver logs from this account.'
    Type: String
    Default: ""
    AllowedPattern: (^[0-9]{12}$)|(^$)
  AWSAccount10:
    Description: '(Optional) AWS Account Number to allow CloudTrail to deliver logs from this account.'
    Type: String
    Default: ""
    AllowedPattern: (^[0-9]{12}$)|(^$)

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: KMS & Bucket Setup
        Parameters:
          - CloudTrailBucketName
          - KMSKeyName
      - Label:
          default: CloudTrail Configuration
        Parameters:
          - ConfigureLocalCloudTrail
          - EncryptLogs
          - CloudTrailLogName
          - MultiRegion
          - IncludeGlobalEvents
          - EnableLogFileValidation
          - ReadWriteType
      - Label:
          default: External AWS Account Numbers
        Parameters:
          - AWSAccount1
          - AWSAccount2
          - AWSAccount3
          - AWSAccount4
          - AWSAccount5
          - AWSAccount6
          - AWSAccount7
          - AWSAccount8
          - AWSAccount9
          - AWSAccount10
    ParameterLabels:
      CloudTrailBucketName:
        default: CloudTrail Bucket Name
      KMSKeyName:
        default: KMS Key Name
      ConfigureLocalCloudTrail:
        default: Configure CloudTrail Locally
      EncryptLogs:
        default: Encrypt Logs
      CloudTrailLogName:
        default: CloudTrail Log Name
      MultiRegion:
        default: Multi Region
      IncludeGlobalEvents:
        default: Include Global Events
      EnableLogFileValidation:
        default: Enable Log File Validation
      ReadWriteType:
        default: Event Types To Log
      AWSAccount1:
        default: AWS Account 1
      AWSAccount2:
        default: AWS Account 2
      AWSAccount3:
        default: AWS Account 3
      AWSAccount4:
        default: AWS Account 4
      AWSAccount5:
        default: AWS Account 5
      AWSAccount6:
        default: AWS Account 6
      AWSAccount7:
        default: AWS Account 7
      AWSAccount8:
        default: AWS Account 8
      AWSAccount9:
        default: AWS Account 9
      AWSAccount10:
        default: AWS Account 10
      
# Conditions to check for empty values
Conditions:
  HasAWSAccount1: 
    !Not [!Equals ['', !Ref 'AWSAccount1']]
  HasAWSAccount2: 
    !Not [!Equals ['', !Ref 'AWSAccount2']]
  HasAWSAccount3: 
    !Not [!Equals ['', !Ref 'AWSAccount3']]
  HasAWSAccount4: 
    !Not [!Equals ['', !Ref 'AWSAccount4']]
  HasAWSAccount5: 
    !Not [!Equals ['', !Ref 'AWSAccount5']]
  HasAWSAccount6: 
    !Not [!Equals ['', !Ref 'AWSAccount6']]
  HasAWSAccount7: 
    !Not [!Equals ['', !Ref 'AWSAccount7']]
  HasAWSAccount8: 
    !Not [!Equals ['', !Ref 'AWSAccount8']]
  HasAWSAccount9: 
    !Not [!Equals ['', !Ref 'AWSAccount9']]
  HasAWSAccount10: 
    !Not [!Equals ['', !Ref 'AWSAccount10']]
  LocalCloudTrail:
    !Equals ['true', !Ref 'ConfigureLocalCloudTrail']
  ShouldEncryptLogs:
    !Equals ['true', !Ref 'EncryptLogs']

Resources:
  CloudTrailBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref 'CloudTrailBucketName'
  CloudTrailBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: CloudTrailBucket
    Properties:
      Bucket: !Ref 'CloudTrailBucketName'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: CloudTrailAclCheck
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !Sub "arn:aws:s3:::${CloudTrailBucketName}"
          - Sid: CloudTrailWrite
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource:
              - !Sub "arn:aws:s3:::${CloudTrailBucketName}/AWSLogs/${AWS::AccountId}/*"
              - !If [HasAWSAccount1, !Sub "arn:aws:s3:::${CloudTrailBucketName}/AWSLogs/${AWSAccount1}/*", !Ref "AWS::NoValue"]
              - !If [HasAWSAccount2, !Sub "arn:aws:s3:::${CloudTrailBucketName}/AWSLogs/${AWSAccount2}/*", !Ref "AWS::NoValue"]
              - !If [HasAWSAccount3, !Sub "arn:aws:s3:::${CloudTrailBucketName}/AWSLogs/${AWSAccount3}/*", !Ref "AWS::NoValue"]
              - !If [HasAWSAccount4, !Sub "arn:aws:s3:::${CloudTrailBucketName}/AWSLogs/${AWSAccount4}/*", !Ref "AWS::NoValue"]
              - !If [HasAWSAccount5, !Sub "arn:aws:s3:::${CloudTrailBucketName}/AWSLogs/${AWSAccount5}/*", !Ref "AWS::NoValue"]
              - !If [HasAWSAccount6, !Sub "arn:aws:s3:::${CloudTrailBucketName}/AWSLogs/${AWSAccount6}/*", !Ref "AWS::NoValue"]
              - !If [HasAWSAccount7, !Sub "arn:aws:s3:::${CloudTrailBucketName}/AWSLogs/${AWSAccount7}/*", !Ref "AWS::NoValue"]
              - !If [HasAWSAccount8, !Sub "arn:aws:s3:::${CloudTrailBucketName}/AWSLogs/${AWSAccount8}/*", !Ref "AWS::NoValue"]
              - !If [HasAWSAccount9, !Sub "arn:aws:s3:::${CloudTrailBucketName}/AWSLogs/${AWSAccount9}/*", !Ref "AWS::NoValue"]
              - !If [HasAWSAccount10, !Sub "arn:aws:s3:::${CloudTrailBucketName}/AWSLogs/${AWSAccount10}/*", !Ref "AWS::NoValue"]
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
  CloudTrailEncryptionKey:
    Type: AWS::KMS::Key
    Condition: ShouldEncryptLogs
    Properties:
      Description: Used for CloudTrail logs encryption.
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Id: Key policy created by CloudTrail
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS:
                - !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: kms:*
            Resource: '*'
          - Sid: Allow CloudTrail to encrypt logs
            Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Action: kms:GenerateDataKey*
            Resource: '*'
            Condition:
              StringLike:
                kms:EncryptionContext:aws:cloudtrail:arn:
                  - !Sub "arn:aws:cloudtrail:*:${AWS::AccountId}:trail/*"
                  - !If [HasAWSAccount1, !Sub "arn:aws:cloudtrail:*:${AWSAccount1}:trail/*", !Ref "AWS::NoValue"]
                  - !If [HasAWSAccount2, !Sub "arn:aws:cloudtrail:*:${AWSAccount2}:trail/*", !Ref "AWS::NoValue"]
                  - !If [HasAWSAccount3, !Sub "arn:aws:cloudtrail:*:${AWSAccount3}:trail/*", !Ref "AWS::NoValue"]
                  - !If [HasAWSAccount4, !Sub "arn:aws:cloudtrail:*:${AWSAccount4}:trail/*", !Ref "AWS::NoValue"]
                  - !If [HasAWSAccount5, !Sub "arn:aws:cloudtrail:*:${AWSAccount5}:trail/*", !Ref "AWS::NoValue"]
                  - !If [HasAWSAccount6, !Sub "arn:aws:cloudtrail:*:${AWSAccount6}:trail/*", !Ref "AWS::NoValue"]
                  - !If [HasAWSAccount7, !Sub "arn:aws:cloudtrail:*:${AWSAccount7}:trail/*", !Ref "AWS::NoValue"]
                  - !If [HasAWSAccount8, !Sub "arn:aws:cloudtrail:*:${AWSAccount8}:trail/*", !Ref "AWS::NoValue"]
                  - !If [HasAWSAccount9, !Sub "arn:aws:cloudtrail:*:${AWSAccount9}:trail/*", !Ref "AWS::NoValue"]
                  - !If [HasAWSAccount10, !Sub "arn:aws:cloudtrail:*:${AWSAccount10}:trail/*", !Ref "AWS::NoValue"]
          - Sid: Allow CloudTrail access
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: kms:DescribeKey
            Resource: '*'
          - Sid: Enable CloudTrail log decrypt permissions
            Effect: Allow
            Principal:
              AWS: '*'
            Action:
              - kms:Decrypt
              - kms:ReEncryptFrom
            Resource: '*'
            Condition:
              StringEquals:
                kms:CallerAccount: !Ref 'AWS::AccountId'
              StringLike:
                kms:EncryptionContext:aws:cloudtrail:arn: !Sub "arn:aws:cloudtrail:*:${AWS::AccountId}:trail/*"
          - Sid: Allow alias creation during setup
            Effect: Allow
            Principal:
              AWS: '*'
            Action: kms:CreateAlias
            Resource: '*'
            Condition:
              StringEquals:
                kms:ViaService: !Sub ec2.${AWS::Region}.amazonaws.com
                kms:CallerAccount: !Ref 'AWS::AccountId'
  CloudTrailEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Condition: ShouldEncryptLogs
    Properties:
      AliasName: !Sub 'alias/${KMSKeyName}'
      TargetKeyId: !Ref 'CloudTrailEncryptionKey'

  LogsAccountCloudTrail:
    Type: AWS::CloudTrail::Trail
    Condition: LocalCloudTrail
    Properties:
      EnableLogFileValidation: !Ref EnableLogFileValidation
      IncludeGlobalServiceEvents: !Ref IncludeGlobalEvents
      IsLogging: true
      IsMultiRegionTrail: !Ref MultiRegion
      EventSelectors: 
        - ReadWriteType: !Ref ReadWriteType
      S3BucketName: !Ref CloudTrailBucketName
      KMSKeyId: !If [ ShouldEncryptLogs, !GetAtt CloudTrailEncryptionKey.Arn, !Ref "AWS::NoValue" ] 
      TrailName: !Ref CloudTrailLogName
Outputs:
  CloudTrailEncryptionKeyArn:
    Description: CloudTrail Encryption Key ARN
    Value: !If [ ShouldEncryptLogs, !GetAtt 'CloudTrailEncryptionKey.Arn', "N/A" ]
  CloudTrailBucket:
    Description: CloudTrail Bucket Name
    Value: !Ref 'CloudTrailBucket'
